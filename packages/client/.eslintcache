[{"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\infra\\mobx\\index.tsx":"1","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\Header.tsx":"2","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\Tags.tsx":"3","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\store\\currentUserStore.ts":"4","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\index.tsx":"5","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\infra\\router\\index.tsx":"6","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\store\\cookieStore.ts":"7","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\store\\authStore.ts":"8","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\SideMenu.tsx":"9","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\ToolsNav.tsx":"10","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\ErrorFallBack.tsx":"11","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\SideBar.tsx":"12","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\App.tsx":"13","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\pages\\dashboard\\index.tsx":"14","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\FlexBox.tsx":"15","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\Divider.tsx":"16","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\SearchBox.tsx":"17","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\store\\rootStore.ts":"18"},{"size":752,"mtime":1608288364905,"results":"19","hashOfConfig":"20"},{"size":2203,"mtime":1608288364899,"results":"21","hashOfConfig":"20"},{"size":9567,"mtime":1608288364903,"results":"22","hashOfConfig":"20"},{"size":900,"mtime":1608288491462,"results":"23","hashOfConfig":"20"},{"size":688,"mtime":1608288364890,"results":"24","hashOfConfig":"20"},{"size":503,"mtime":1608288364906,"results":"25","hashOfConfig":"20"},{"size":462,"mtime":1608288364913,"results":"26","hashOfConfig":"20"},{"size":3450,"mtime":1608288364912,"results":"27","hashOfConfig":"20"},{"size":149,"mtime":1608288364902,"results":"28","hashOfConfig":"20"},{"size":7502,"mtime":1608288364904,"results":"29","hashOfConfig":"20"},{"size":3338,"mtime":1608305141621,"results":"30","hashOfConfig":"20"},{"size":1778,"mtime":1608288364902,"results":"31","hashOfConfig":"20"},{"size":1523,"mtime":1608307185550,"results":"32","hashOfConfig":"20"},{"size":1541,"mtime":1608305637359,"results":"33","hashOfConfig":"20"},{"size":911,"mtime":1608288364897,"results":"34","hashOfConfig":"20"},{"size":323,"mtime":1608288364896,"results":"35","hashOfConfig":"20"},{"size":6208,"mtime":1608288364901,"results":"36","hashOfConfig":"20"},{"size":3530,"mtime":1608306715422,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"std525",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\infra\\mobx\\index.tsx",[],["77","78","79","80","81"],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\Header.tsx",[],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\Tags.tsx",["82"],"import React, {useState, useEffect, MouseEvent} from 'react'\r\nimport styled from '@emotion/styled/macro'\r\nimport {observer} from 'mobx-react-lite'\r\nimport {IconType} from 'react-icons'\r\nimport {FaGhost} from 'react-icons/fa'\r\nimport {VscChevronDown, VscChevronUp} from 'react-icons/vsc'\r\nimport {useRootStore} from '../infra/mobx'\r\nimport {ITag, IDropdownItems, Tags} from '../utils/MenuTags'\r\nimport {generateKey} from '../utils/generateKeys'\r\n/* Styles */\r\ntype IMenu = {\r\n  open: boolean\r\n}\r\ntype IDropDown = {\r\n  active?: boolean\r\n}\r\ninterface IListWrap {\r\n  open: boolean\r\n  isDropDown?: boolean\r\n  tagActive?: boolean\r\n}\r\ninterface IListItem {\r\n  open: boolean\r\n  isDropDown?: boolean\r\n  active?: boolean\r\n}\r\nconst MenuList = styled.ul<IMenu>`\r\n  position: relative;\r\n  padding: ${({open}) => (open ? '0' : '1rem 0')};\r\n  color: transparent;\r\n  margin-top: 20px;\r\n  margin-bottom: 30px;\r\n  .title_tagList {\r\n    display: ${({open}) => (open ? 'block' : 'none')};\r\n    visibility: ${({open}) => (open ? 'visible' : 'hidden')};\r\n    opacity: ${({open}) => (open ? '1' : '0')};\r\n    transition: all 0.5s cubic-bezier(0, 1, 0, 1);\r\n    align-items: center;\r\n    position: relative;\r\n    border-radius: 0.25rem;\r\n    color: ${({theme}: any) =>\r\n      theme.sideBar.tittleTag || 'rgba(26, 51, 83, 0.6)'};\r\n    font-size: 0.75rem;\r\n    padding: 0.75rem 1.525rem;\r\n    font-weight: bold;\r\n    font-family: Roboto, sans-serif;\r\n    text-transform: uppercase;\r\n    margin-top: 0.9375rem;\r\n  }\r\n`\r\n\r\nconst OpenedStyled = styled.ul<IDropDown>`\r\n  position: relative;\r\n  opacity: ${({active}) => (active ? '1' : '0')};\r\n  max-height: ${({active}) => (active ? '500px' : '0')};\r\n  transition: max-height 0.5s, opacity 1s;\r\n  overflow: hidden;\r\n  transition: padding 300ms;\r\n  padding: 0.5em 0 0 2rem;\r\n  :before {\r\n    content: '';\r\n    height: 100%;\r\n    opacity: 1;\r\n    width: 3px;\r\n    background: rgb(202 240 248 / 0.4);\r\n    position: absolute;\r\n    left: 20px;\r\n    top: 0;\r\n    border-radius: 15px;\r\n  }\r\n  li {\r\n    display: flex;\r\n    align-items: center;\r\n    white-space: nowrap;\r\n    padding: 8px 20px 8px 20px;\r\n    :hover {\r\n      border-radius: 0.25rem;\r\n      a {\r\n        font-weight: 500;\r\n        color: ${({theme}: any) => theme.sideBar.menuTag.activeText};\r\n      }\r\n    }\r\n    margin-top: 2px;\r\n    svg {\r\n      margin-right: 20px;\r\n    }\r\n  }\r\n  a {\r\n    color: ${({theme}: any) => theme.sideBar.menuTag.text};\r\n    letter-spacing: 0.7px;\r\n    font-family: Roboto;\r\n    text-transform: capitalize;\r\n    font-weight: 500;\r\n  }\r\n  & .li-open:hover > .icon-li-drop {\r\n    color: orange;\r\n    transition: color 0.5s;\r\n  }\r\n  & .icon-li-drop {\r\n    margin-right: 10px;\r\n  }\r\n`\r\n\r\nconst ClosedStyled = styled('ul')`\r\n  display: none;\r\n  max-height: 400px !important;\r\n  max-width: 400px !important;\r\n  -webkit-transition: all 0.2s;\r\n  -moz-transition: all 0.2s;\r\n  -ms-transition: all 0.2s;\r\n  -o-transition: all 0.2s;\r\n  transition: all 0.2s;\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  top: 0;\r\n  left: 100%;\r\n  font-weight: 400;\r\n  position: absolute;\r\n  padding: 0px;\r\n  z-index: 2;\r\n  border-top-right-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  background: #fff;\r\n  & .li-closed {\r\n    display: flex;\r\n    align-items: center;\r\n    white-space: nowrap;\r\n    padding: 10px 20px;\r\n    :hover > a {\r\n      color: orange;\r\n    }\r\n    svg {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  a {\r\n    font-family: 'Ubuntu';\r\n    font-size: 14px;\r\n    font-weight: 300;\r\n    text-decoration: none;\r\n    color: #949e98;\r\n  }\r\n`\r\n\r\nconst ListWrap = styled.div<IListWrap>`\r\n  padding: ${({open}) =>\r\n    open ? '8px 1rem 8px 1.2rem' : '8px 1rem 8px 1.2rem'};\r\n  display: flex;\r\n  transition: all 0.5s cubic-bezier(0, 1, 0, 1);\r\n  justify-content: ${({open}) => (open ? 'space-between' : 'center')};\r\n  align-items: center;\r\n  position: relative;\r\n  border-radius: 10px;\r\n  background: ${({tagActive, open, theme}: any) =>\r\n    tagActive && open ? theme.sideBar.menuTag.background : ''};\r\n  transition: all 0.5s ease;\r\n  padding: 12px 10px;\r\n  :hover {\r\n    background: ${({open, theme}: any) =>\r\n      open ? theme.sideBar.menuTag.hoveredBackground : ''};\r\n    a {\r\n      svg {\r\n        fill: ${({theme}: any) => theme.sideBar.menuTag.activeText};\r\n        stroke: ${({theme}: any) => theme.sideBar.menuTag.activeText};\r\n        transition: all 0.3s ease;\r\n      }\r\n      span {\r\n        color: ${({theme}: any) => theme.sideBar.menuTag.activeText};\r\n      }\r\n    }\r\n  }\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    span {\r\n      color: ${({tagActive, theme}: any) =>\r\n        tagActive\r\n          ? theme.sideBar.menuTag.activeText\r\n          : theme.sideBar.menuTag.text};\r\n      margin-bottom: -2px;\r\n    }\r\n    svg {\r\n      fill: ${({tagActive, theme}: any) =>\r\n        tagActive\r\n          ? theme.sideBar.menuTag.activeText\r\n          : theme.sideBar.menuTag.text};\r\n      margin-right: ${({open}) => (open ? '10px' : '0')};\r\n      transition: all 0.5s cubic-bezier(0, 1, 0, 1);\r\n    }\r\n  }\r\n  & .icon-li {\r\n    margin-right: 10px;\r\n  }\r\n  & .down-up_svg,\r\n  .li-name {\r\n    display: ${({open}) => (open ? 'space-between' : 'none')};\r\n    color: ${({tagActive, theme}: any) =>\r\n      tagActive\r\n        ? theme.sideBar.menuTag.activeText\r\n        : theme.sideBar.menuTag.text};\r\n    letter-spacing: 0.7px;\r\n    font-family: Roboto;\r\n    text-transform: capitalize;\r\n    font-weight: 500;\r\n  }\r\n  & .svg-arrow {\r\n    color: ${({theme}: any) => (theme.type === 'dark' ? '#fff' : '#222')};\r\n  }\r\n`\r\n\r\nconst ListItem = styled.li<IListItem>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  padding-left: ${({open}) => (open ? '20px' : '15px')};\r\n  padding-right: 15px;\r\n  justify-content: ${({open}) => (open ? 'space-between' : 'center')};\r\n  cursor: pointer;\r\n  margin-bottom: 8px;\r\n  &:hover ${ClosedStyled} {\r\n    display: block;\r\n  }\r\n`\r\n/* Styles */\r\nexport type TSideBar = {\r\n  open: boolean\r\n}\r\ntype ClickHandler = (tag: ITag) => (e: MouseEvent) => void\r\ntype ShowHideDropItem = (tag: ITag) => void\r\ninterface IDrop {\r\n  active?: boolean\r\n  isOpen: boolean\r\n  dropItems: IDropdownItems[]\r\n  setVisible: ClickHandler\r\n  Icon: IconType\r\n}\r\ninterface ITagList {\r\n  clickHandler: ClickHandler\r\n  sideBarStatus: boolean\r\n  tag: ITag\r\n  open: boolean\r\n}\r\n\r\nconst Drop: React.FC<IDrop> = observer(({active, dropItems, isOpen}) => {\r\n  return (\r\n    <>\r\n      {isOpen === true ? (\r\n        <OpenedStyled active={active}>\r\n          {dropItems.map((item) => (\r\n            <li className=\"li-open\" key={JSON.stringify(item.Name)}>\r\n              <a href=\"#/\">{item.Name}</a>\r\n            </li>\r\n          ))}\r\n        </OpenedStyled>\r\n      ) : (\r\n        <ClosedStyled>\r\n          {dropItems.map((item) => (\r\n            <li className=\"li-closed\" key={JSON.stringify(item.Name)}>\r\n              <FaGhost size={18} />\r\n              <a href=\"#/\">{item.Name}</a>\r\n            </li>\r\n          ))}\r\n        </ClosedStyled>\r\n      )}\r\n    </>\r\n  )\r\n})\r\nconst TagList: React.FC<ITagList> = observer(\r\n  ({sideBarStatus, tag, clickHandler, open}) => {\r\n    return (\r\n      <ListItem\r\n        open={open}\r\n        isDropDown={!!tag.DropdownItems}\r\n        active={tag.Active}\r\n      >\r\n        {sideBarStatus === true ? (\r\n          <ListWrap\r\n            open={sideBarStatus}\r\n            onClick={tag.Active !== undefined ? clickHandler(tag) : undefined}\r\n            tagActive={tag.Active}\r\n            isDropDown={!!tag.DropdownItems}\r\n          >\r\n            <a href=\"#/\">\r\n              <tag.Icon size={22} />\r\n              <span className=\"li-name\">{tag.Name}</span>\r\n            </a>\r\n            {tag.DropdownItems ? (\r\n              <span className=\"svg-arrow\">\r\n                {tag.Active === true ? <VscChevronUp /> : <VscChevronDown />}\r\n              </span>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </ListWrap>\r\n        ) : (\r\n          <ListWrap open={sideBarStatus}>\r\n            <a href=\"#/\">\r\n              <tag.Icon size={24} />\r\n              <span className=\"li-name\">{tag.Name}</span>\r\n            </a>\r\n          </ListWrap>\r\n        )}\r\n        {tag.DropdownItems ? (\r\n          <Drop\r\n            active={tag.Active}\r\n            dropItems={tag.DropdownItems}\r\n            Icon={tag.Icon}\r\n            isOpen={open}\r\n            setVisible={clickHandler}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n      </ListItem>\r\n    )\r\n  },\r\n)\r\nconst MenuTags: React.FC = observer(() => {\r\n  const {layoutStore} = useRootStore()\r\n  const [tags, setTags] = useState<ITag[]>(Tags)\r\n  const showHideDropItem: ShowHideDropItem = (tag) => {\r\n    setTags((items) =>\r\n      items.map((item) => ({\r\n        ...item,\r\n        Active: item.Name === tag.Name ? tag.Active !== true : false,\r\n      })),\r\n    )\r\n  }\r\n  useEffect(() => {\r\n    setTags((items) =>\r\n      items.map((item) => ({\r\n        ...item,\r\n        Active: false,\r\n      })),\r\n    )\r\n  }, [layoutStore.sideBar])\r\n\r\n  const clickHandler: ClickHandler = (tag) => (e) => {\r\n    e.preventDefault()\r\n    showHideDropItem(tag)\r\n  }\r\n\r\n  return (\r\n    <MenuList open={layoutStore.sideBar}>\r\n      {tags.map((item) => (\r\n        <div key={JSON.stringify(item.Name)}>\r\n          {item.Title ? <div className=\"title_tagList\">{item.Title}</div> : ''}\r\n          <TagList\r\n            open={layoutStore.sideBar}\r\n            sideBarStatus={layoutStore.sideBar}\r\n            tag={item}\r\n            clickHandler={clickHandler}\r\n          />\r\n        </div>\r\n      ))}\r\n    </MenuList>\r\n  )\r\n})\r\n\r\nexport default MenuTags\r\n",["83","84","85","86","87"],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\store\\currentUserStore.ts",["88"],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\index.tsx",[],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\infra\\router\\index.tsx",[],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\store\\cookieStore.ts",[],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\store\\authStore.ts",["89","90","91"],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\SideMenu.tsx",[],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\ToolsNav.tsx",[],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\ErrorFallBack.tsx",["92","93","94"],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\SideBar.tsx",[],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\App.tsx",["95","96"],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\pages\\dashboard\\index.tsx",[],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\FlexBox.tsx",[],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\Divider.tsx",[],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\SearchBox.tsx",[],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\store\\rootStore.ts",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":9,"column":9,"nodeType":"109","messageId":"110","endLine":9,"endColumn":20},{"ruleId":"97","replacedBy":"111"},{"ruleId":"99","replacedBy":"112"},{"ruleId":"101","replacedBy":"113"},{"ruleId":"103","replacedBy":"114"},{"ruleId":"105","replacedBy":"115"},{"ruleId":"107","severity":1,"message":"116","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":28},{"ruleId":"107","severity":1,"message":"117","line":45,"column":13,"nodeType":"109","messageId":"110","endLine":45,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":70,"column":7,"nodeType":"120","messageId":"121","endLine":70,"endColumn":18},{"ruleId":"107","severity":1,"message":"117","line":73,"column":13,"nodeType":"109","messageId":"110","endLine":73,"endColumn":17},{"ruleId":"107","severity":1,"message":"122","line":98,"column":25,"nodeType":"109","messageId":"110","endLine":98,"endColumn":30},{"ruleId":"107","severity":1,"message":"123","line":98,"column":32,"nodeType":"109","messageId":"110","endLine":98,"endColumn":46},{"ruleId":"107","severity":1,"message":"124","line":98,"column":48,"nodeType":"109","messageId":"110","endLine":98,"endColumn":66},{"ruleId":"107","severity":1,"message":"125","line":39,"column":5,"nodeType":"109","messageId":"110","endLine":39,"endColumn":21},{"ruleId":"126","severity":1,"message":"127","line":44,"column":6,"nodeType":"128","endLine":44,"endColumn":8,"suggestions":"129"},"lines-around-directive",["130"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'generateKey' is defined but never used.","Identifier","unusedVar",["130"],[],[],[],[],"'runInAction' is defined but never used.","'mute' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'error' is defined but never used.","'componentStack' is defined but never used.","'resetErrorBoundary' is defined but never used.","'currentUserStore' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'appState' and 'initApi'. Either include them or remove the dependency array.","ArrayExpression",["131"],"padding-line-between-statements",{"desc":"132","fix":"133"},"Update the dependencies array to be: [appState, initApi]",{"range":"134","text":"135"},[1191,1193],"[appState, initApi]"]