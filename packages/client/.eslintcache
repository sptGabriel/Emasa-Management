[{"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\App.tsx":"1","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\infra\\router\\routes2.tsx":"2","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\store\\cookieStore.ts":"3","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\store\\currentUserStore.ts":"4","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\pages\\login\\index.tsx":"5","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\Divider.tsx":"6","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\utils\\MenuTags.ts":"7","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\Tags.tsx":"8","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\GearButton.tsx":"9","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\utils\\useHeight.ts":"10","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\pages\\dashboard\\index.tsx":"11"},{"size":1523,"mtime":1608723599117,"results":"12","hashOfConfig":"13"},{"size":1160,"mtime":1608733105675,"results":"14","hashOfConfig":"13"},{"size":462,"mtime":1608720319473,"results":"15","hashOfConfig":"13"},{"size":1076,"mtime":1608720319473,"results":"16","hashOfConfig":"13"},{"size":9236,"mtime":1608720319458,"results":"17","hashOfConfig":"13"},{"size":323,"mtime":1608720319460,"results":"18","hashOfConfig":"13"},{"size":2407,"mtime":1608734892422,"results":"19","hashOfConfig":"13"},{"size":11757,"mtime":1608740564739,"results":"20","hashOfConfig":"13"},{"size":2920,"mtime":1608732588861,"results":"21","hashOfConfig":"13"},{"size":796,"mtime":1608732631589,"results":"22","hashOfConfig":"13"},{"size":2485,"mtime":1608733157342,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19wwjwr",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\App.tsx",[],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\infra\\router\\routes2.tsx",["47","48"],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\store\\cookieStore.ts",[],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\store\\currentUserStore.ts",[],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\pages\\login\\index.tsx",["49","50"],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\Divider.tsx",[],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\utils\\MenuTags.ts",[],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\Tags.tsx",["51","52","53","54"],"import React, {useState, useEffect, MouseEvent} from 'react'\r\nimport styled from '@emotion/styled/macro'\r\nimport {observer} from 'mobx-react-lite'\r\nimport {IconType} from 'react-icons'\r\nimport {VscChevronDown} from 'react-icons/vsc'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {GiSelect} from 'react-icons/gi'\r\nimport {FaAngleDown} from 'react-icons/fa'\r\nimport {animated, config, useSpring} from 'react-spring'\r\nimport {useRootStore} from '../infra/mobx'\r\nimport {ITag, IDropdownItems, Tags} from '../utils/MenuTags'\r\nimport {useHeight} from '../utils/useHeight'\r\n/* Styles */\r\ntype IMenu = {\r\n  open: boolean\r\n  hover: boolean\r\n}\r\ntype IDropDown = {\r\n  active?: boolean\r\n  open: boolean\r\n}\r\n//  interface IListWrap {\r\n//  open: boolean\r\n//  isDropDown?: boolean\r\n//  tagActive?: boolean\r\n//  }\r\ninterface IListItem {\r\n  open: boolean\r\n  isDropDown?: boolean\r\n  active?: boolean\r\n}\r\nconst MenuList = styled.ul<IMenu>`\r\n  color: transparent;\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow-y: auto;\r\n  transition: 0.2s;\r\n  transition-timing-function: ease;\r\n  transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);\r\n  scrollbar-color: auto;\r\n  scrollbar-width: thin;\r\n  padding: 0 15px;\r\n  &::-webkit-scrollbar {\r\n    width: ${({open}) => (open ? '6px' : '0')};\r\n    height: ${({open}) => (open ? '18px ' : '0')};\r\n  }\r\n  &::-webkit-scrollbar-thumb:vertical {\r\n    height: 6px;\r\n    //border: 4px solid ${({theme}: any) => theme.background};\r\n    background-clip: padding-box;\r\n    background: transparent;\r\n    background: ${({hover, theme, open}: any) =>\r\n      open && hover ? '#ddd' : theme.background};\r\n    border-radius: 100vh;\r\n  }\r\n  &::-webkit-scrollbar-button {\r\n    width: 0;\r\n    height: 0;\r\n    display: none;\r\n  }\r\n  &::-webkit-scrollbar-corner {\r\n    background-color: red;\r\n  }\r\n  &::-webkit-scrollbar-track {\r\n    background-clip: content-box;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    /* margin-bottom: 40vh; */\r\n  }\r\n  .title_tagList {\r\n    display: ${({open}) => (open ? 'block' : 'none')};\r\n    opacity: ${({open}) => (open ? '1' : '0')};\r\n    padding: 12px 18px;\r\n    transition: all 0.5s cubic-bezier(0, 1, 0, 1);\r\n    align-items: center;\r\n    position: relative;\r\n    border-radius: 0.25rem;\r\n    color: ${({theme}: any) =>\r\n      theme.sideBar.tittleTag || 'rgba(26, 51, 83, 0.6)'};\r\n    font-size: 0.9rem;\r\n    font-weight: 500;\r\n    font-family: Montserrat, Helvetica, Arial, sans-serif;\r\n    text-transform: uppercase;\r\n    color: #999;\r\n    overflow: hidden !important;\r\n    text-overflow: ellipsis !important;\r\n    white-space: nowrap !important;\r\n  }\r\n`\r\n\r\nconst OpenedStyled = styled(animated.ul)<IDropDown>`\r\n  position: relative;\r\n  /* display: ${({open}) => (open ? 'flex' : 'none')}; */\r\n  flex-direction: column;\r\n  /* opacity: ${({active}) => (active ? '1' : '0')};\r\n  max-height: ${({active}) => (active ? 'none' : '0')}; */\r\n  transition: max-height 0.5s, opacity 1s;\r\n  transition: padding 300ms;\r\n  padding: 0.5em 0 0 2rem;\r\n  .dropdown-wrap {\r\n    &:hover {\r\n      .svg-drop,\r\n      .tag-optname {\r\n        transform: translateX(5px);\r\n      }\r\n    }\r\n  }\r\n  :before {\r\n    content: '';\r\n    height: 100%;\r\n    opacity: 1;\r\n    width: 3px;\r\n    background: #f6f6f6;\r\n    position: absolute;\r\n    left: 20px;\r\n    top: 0;\r\n    border-radius: 15px;\r\n  }\r\n  .dropdown-tag {\r\n    display: flex;\r\n    align-items: center;\r\n    color: #000;\r\n    -webkit-transition: none;\r\n    border-radius: 4px;\r\n    padding: 5px 0;\r\n  }\r\n  .tag-optname {\r\n    display: block;\r\n    color: ${({theme}: any) => theme.sideBar.menuTag.text};\r\n    line-height: 1.8rem;\r\n    letter-spacing: 0.7px;\r\n    font-family: Roboto;\r\n    text-transform: capitalize;\r\n    font-weight: 400;\r\n    transition: transform 0.25s ease, -webkit-transform 0.25s ease;\r\n    transition: -webkit-transform 0.25s ease;\r\n    transition: transform 0.25s ease;\r\n  }\r\n  .svg-drop {\r\n    width: 12px;\r\n    height: 12px;\r\n    stroke: #565656;\r\n    margin-right: 15px;\r\n    margin-left: 10px;\r\n    transition: transform 0.25s ease, -webkit-transform 0.25s ease;\r\n    transition: -webkit-transform 0.25s ease;\r\n    transition: transform 0.25s ease;\r\n  }\r\n`\r\n\r\nconst ClosedStyled = styled('ul')`\r\n  display: none;\r\n  max-height: 400px !important;\r\n  max-width: 400px !important;\r\n  -webkit-transition: all 0.2s;\r\n  -moz-transition: all 0.2s;\r\n  -ms-transition: all 0.2s;\r\n  -o-transition: all 0.2s;\r\n  transition: all 0.2s;\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  top: 0;\r\n  left: 100%;\r\n  font-weight: 400;\r\n  position: relative;\r\n  padding: 0px;\r\n  z-index: 2;\r\n  border-top-right-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  background: #fff;\r\n  & .li-closed {\r\n    display: flex;\r\n    align-items: center;\r\n    white-space: nowrap;\r\n    padding: 10px 20px;\r\n    svg {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  a {\r\n    font-family: 'Ubuntu';\r\n    font-size: 14px;\r\n    font-weight: 300;\r\n    text-decoration: none;\r\n    color: #949e98;\r\n  }\r\n`\r\n\r\nconst ListItem = styled.li<IListItem>`\r\n  display: block;\r\n  position: relative;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  :focus {\r\n    outline: none; /* no outline - for most browsers */\r\n    box-shadow: none; /* no box shadow - for some browsers or if you are using Bootstrap */\r\n  }\r\n  &:hover {\r\n    .svg-main,\r\n    .tag-name {\r\n      transform: translateX(5px);\r\n    }\r\n  }\r\n  &:hover ${ClosedStyled} {\r\n    display: block;\r\n  }\r\n  .tag-container {\r\n    width: 100%;\r\n  }\r\n  .active-dropheader {\r\n    background: rgba(0, 0, 0, 0.1);\r\n    .tag-optname {\r\n      color: #838598 !important;\r\n      font-weight: 500;\r\n    }\r\n    .svg-drop {\r\n      stroke-width: 3px;\r\n      stroke: #838598 !important;\r\n    }\r\n  }\r\n  .active {\r\n    background: rgba(0, 0, 0, 0.1);\r\n  }\r\n  .svg-arrow {\r\n    position: absolute;\r\n    top: calc(50% - 8px);\r\n    left: 220px;\r\n    color: ${({theme, active}: any) =>\r\n      active ? '#0079db' : theme.sideBar.menuTag.text};\r\n  }\r\n  .tag-name {\r\n    display: ${({open}) => (open ? 'space-between' : 'none')};\r\n    color: ${({theme, active}: any) =>\r\n      active ? '#0079db' : theme.sideBar.menuTag.text};\r\n    line-height: 1.8rem;\r\n    letter-spacing: 0.7px;\r\n    font-family: Roboto;\r\n    text-transform: capitalize;\r\n    font-weight: ${({active}) => (active ? '500' : '400')};\r\n    transition: transform 0.25s ease, -webkit-transform 0.25s ease;\r\n    transition: -webkit-transform 0.25s ease;\r\n    transition: transform 0.25s ease;\r\n  }\r\n  .svg-main {\r\n    width: 24px;\r\n    height: 24px;\r\n    fill: ${({theme, active}: any) =>\r\n      active ? '#0079db' : theme.sideBar.menuTag.text};\r\n    margin-right: ${({open}) => (open ? '14px' : '0')};\r\n    transition: transform 0.25s ease, -webkit-transform 0.25s ease;\r\n    transition: -webkit-transform 0.25s ease;\r\n    transition: transform 0.25s ease;\r\n  }\r\n  .tag-wrapper {\r\n    display: flex;\r\n    height: 48px;\r\n    width: 100%;\r\n    border-radius: 4px;\r\n    padding: ${({open}) => (open ? '10px 14px' : '0')};\r\n    align-items: center;\r\n    background: ${({active, isDropDown}) =>\r\n      active && isDropDown ? '#f6f6f6' : ''};\r\n    justify-content: ${({open}) => (open ? 'flex-start' : 'center')};\r\n    position: relative;\r\n  }\r\n`\r\n\r\n/* Styles */\r\nexport type TSideBar = {\r\n  open: boolean\r\n}\r\ntype ClickHandler = (tag: ITag) => (e: MouseEvent) => void\r\ntype ShowHideDropItem = (tag: ITag) => void\r\ninterface IDrop {\r\n  active?: boolean\r\n  isOpen: boolean\r\n  dropItems: IDropdownItems[]\r\n  setVisible: ClickHandler\r\n  Icon: IconType\r\n}\r\ninterface ITagList {\r\n  clickHandler: ClickHandler\r\n  tag: ITag\r\n  open: boolean\r\n}\r\n\r\nconst Drop: React.FC<IDrop> = observer(({active, dropItems, isOpen}) => {\r\n  const [heightRef] = useHeight()\r\n  const slideInStyles = useSpring({\r\n    config: {duration: 600},\r\n    from: {opacity: 0, maxHeight: 0},\r\n    to: {\r\n      opacity: active ? 1 : 0,\r\n      maxHeight: active ? 500 : 0,\r\n    },\r\n  })\r\n\r\n  return (\r\n    <OpenedStyled\r\n      active={active}\r\n      open={isOpen}\r\n      ref={heightRef}\r\n      style={{...(slideInStyles as any), overflow: 'hidden'}}\r\n    >\r\n      {dropItems.map((item) => (\r\n        <li className=\"dropdown-wrap\" key={JSON.stringify(item.Name)}>\r\n          <NavLink\r\n            to={item.Link}\r\n            className=\"dropdown-tag\"\r\n            activeClassName=\"active-dropheader\"\r\n            end\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"20px\"\r\n              height=\"20px\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke=\"transpa\"\r\n              stroke-width=\"2\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n              className=\"svg-drop\"\r\n            >\r\n              <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n            </svg>\r\n\r\n            <span className=\"tag-optname\">{item.Name}</span>\r\n          </NavLink>\r\n        </li>\r\n      ))}\r\n    </OpenedStyled>\r\n  )\r\n})\r\nconst TagList: React.FC<ITagList> = observer(({tag, clickHandler, open}) => {\r\n  return (\r\n    <ListItem open={open} isDropDown={!!tag.DropdownItems} active={tag.Active}>\r\n      {tag.Link ? (\r\n        <div\r\n          className=\"tag-container\"\r\n          role=\"presentation\"\r\n          onClick={tag.Active !== undefined ? clickHandler(tag) : undefined}\r\n        >\r\n          <NavLink\r\n            className=\"tag-wrapper\"\r\n            activeClassName=\"active\"\r\n            to={tag.Link}\r\n            end\r\n          >\r\n            <tag.Icon className=\"svg-main\" size={22} />\r\n            <span className=\"tag-name\">{tag.Name}</span>\r\n          </NavLink>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className=\"tag-container\"\r\n          role=\"presentation\"\r\n          onClick={tag.Active !== undefined ? clickHandler(tag) : undefined}\r\n        >\r\n          <div className=\"tag-wrapper\">\r\n            <tag.Icon className=\"svg-main\" size={22} />\r\n            <span className=\"tag-name\">{tag.Name}</span>\r\n            <span className=\"svg-arrow\">\r\n              {tag.Active === true ? (\r\n                <FaAngleDown />\r\n              ) : (\r\n                <FaAngleDown style={{transform: 'rotate(280deg)'}} />\r\n              )}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {tag.DropdownItems ? (\r\n        <Drop\r\n          active={tag.Active}\r\n          dropItems={tag.DropdownItems}\r\n          Icon={tag.Icon}\r\n          isOpen={open}\r\n          setVisible={clickHandler}\r\n        />\r\n      ) : (\r\n        ''\r\n      )}\r\n    </ListItem>\r\n  )\r\n})\r\nconst MenuTags: React.FC<{hover: boolean}> = observer(({hover}) => {\r\n  const {layoutStore} = useRootStore()\r\n  const [tags, setTags] = useState<ITag[]>(Tags)\r\n  const showHideDropItem: ShowHideDropItem = (tag) => {\r\n    setTags((items) =>\r\n      items.map((item) => ({\r\n        ...item,\r\n        Active: item.Name === tag.Name ? tag.Active !== true : false,\r\n      })),\r\n    )\r\n  }\r\n  useEffect(() => {\r\n    setTags((items) =>\r\n      items.map((item) => ({\r\n        ...item,\r\n        Active: item.Name === 'Dashboard' ? true : false,\r\n      })),\r\n    )\r\n  }, [])\r\n\r\n  const clickHandler: ClickHandler = (tag) => (e) => {\r\n    console.log('a')\r\n    e.preventDefault()\r\n    showHideDropItem(tag)\r\n  }\r\n\r\n  return (\r\n    <MenuList\r\n      open={layoutStore.sideBar || layoutStore.onHoverSideState}\r\n      hover={hover}\r\n    >\r\n      {tags.map((item) => (\r\n        <div key={JSON.stringify(item.Name)}>\r\n          {item.Title ? <div className=\"title_tagList\">{item.Title}</div> : ''}\r\n          <TagList\r\n            open={layoutStore.sideBar || layoutStore.onHoverSideState}\r\n            tag={item}\r\n            clickHandler={clickHandler}\r\n          />\r\n        </div>\r\n      ))}\r\n    </MenuList>\r\n  )\r\n})\r\n\r\nexport default MenuTags\r\n","C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\components\\GearButton.tsx",["55","56"],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\shared\\utils\\useHeight.ts",["57","58"],"C:\\Users\\gabrielti\\Documents\\Emasa-Management\\packages\\client\\src\\pages\\dashboard\\index.tsx",["59"],{"ruleId":"60","severity":1,"message":"61","line":3,"column":19,"nodeType":"62","messageId":"63","endLine":3,"endColumn":25},{"ruleId":"60","severity":1,"message":"64","line":7,"column":8,"nodeType":"62","messageId":"63","endLine":7,"endColumn":19},{"ruleId":"60","severity":1,"message":"65","line":2,"column":16,"nodeType":"62","messageId":"63","endLine":2,"endColumn":25},{"ruleId":"66","severity":1,"message":"67","line":326,"column":39,"nodeType":"68","endLine":326,"endColumn":47,"fix":"69"},{"ruleId":"60","severity":1,"message":"70","line":5,"column":9,"nodeType":"62","messageId":"63","endLine":5,"endColumn":23},{"ruleId":"60","severity":1,"message":"71","line":7,"column":9,"nodeType":"62","messageId":"63","endLine":7,"endColumn":17},{"ruleId":"60","severity":1,"message":"72","line":9,"column":19,"nodeType":"62","messageId":"63","endLine":9,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":410,"column":5,"nodeType":"75","messageId":"76","endLine":410,"endColumn":16},{"ruleId":"60","severity":1,"message":"77","line":3,"column":9,"nodeType":"62","messageId":"63","endLine":3,"endColumn":15},{"ruleId":"60","severity":1,"message":"78","line":4,"column":9,"nodeType":"62","messageId":"63","endLine":4,"endColumn":24},{"ruleId":"60","severity":1,"message":"79","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":13},{"ruleId":"60","severity":1,"message":"80","line":11,"column":27,"nodeType":"62","messageId":"63","endLine":11,"endColumn":38},{"ruleId":"73","severity":1,"message":"74","line":66,"column":5,"nodeType":"75","messageId":"76","endLine":66,"endColumn":16},"@typescript-eslint/no-unused-vars","'Outlet' is defined but never used.","Identifier","unusedVar","'GearTheming' is defined but never used.","'useEffect' is defined but never used.","react/jsx-curly-brace-presence","Curly braces are unnecessary here.","JSXExpressionContainer",{"range":"81","text":"82"},"'VscChevronDown' is defined but never used.","'GiSelect' is defined but never used.","'config' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'BsGear' is defined but never used.","'RiSettings2Line' is defined but never used.","'React' is defined but never used.","'packet' is defined but never used.",[8149,8157],"\"#fff\""]